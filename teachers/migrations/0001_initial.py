# Generated by Django 3.1.5 on 2021-06-22 14:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deadline', models.DateTimeField()),
            ],
            options={
                'db_table': 'assignments',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
            ],
            options={
                'db_table': 'choices',
            },
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Class can not be less than 1'), django.core.validators.MaxValueValidator(12, 'Class can not be greater than 12')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'classrooms',
            },
        ),
        migrations.CreateModel(
            name='ClassroomPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'classroompages',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('finish_time', models.TimeField()),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('exam_help_text', models.TextField()),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='teachers.classroom')),
            ],
            options={
                'db_table': 'exams',
            },
        ),
        migrations.CreateModel(
            name='ManualResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_marks', models.IntegerField()),
                ('exam', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='manual_result', to='teachers.exam')),
            ],
            options={
                'db_table': 'manual_results',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='teachers.classroom')),
            ],
            options={
                'db_table': 'semesters',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
                ('roll_no', models.PositiveIntegerField(blank=True, null=True)),
                ('fathers_name', models.CharField(max_length=100)),
                ('student_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='teachers.classroom')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='teachers.semester')),
            ],
            options={
                'db_table': 'subjects',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'teachers',
            },
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='timetable', to='teachers.classroom')),
            ],
            options={
                'db_table': 'TimeTable',
            },
        ),
        migrations.CreateModel(
            name='TeacherMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('accepted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_memberships', to='teachers.classroom')),
                ('subject', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_membership', to='teachers.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('finish_time', models.TimeField()),
                ('subject', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subjct_time', to='teachers.subject')),
                ('timetable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_entries', to='teachers.timetable')),
            ],
            options={
                'db_table': 'SubjectEntries',
            },
        ),
        migrations.AddField(
            model_name='subject',
            name='subject_teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='teachers.teacher'),
        ),
        migrations.CreateModel(
            name='StudentResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.CharField(max_length=200)),
                ('classroom_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='teachers.classroompage')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='teachers.student')),
            ],
            options={
                'db_table': 'studentresponses',
            },
        ),
        migrations.AddField(
            model_name='semester',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='teachers.teacher'),
        ),
        migrations.CreateModel(
            name='ResultRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.IntegerField()),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_rows', to='teachers.manualresult')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachers.student')),
            ],
            options={
                'db_table': 'result_rows',
            },
        ),
        migrations.CreateModel(
            name='RankingDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('approved', models.BooleanField(default=False)),
                ('pending', models.BooleanField(default=True)),
                ('document', models.FileField(upload_to='ranking_documents/')),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranking_documents', to='teachers.student')),
            ],
            options={
                'db_table': 'ranking_documents',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=400)),
                ('order', models.SmallIntegerField()),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answerQuestions', to='teachers.choice')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignmentQuestions', to='teachers.assignment')),
                ('choices', models.ManyToManyField(related_name='choiceQuestions', to='teachers.Choice')),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=500)),
                ('chapter_no', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='teachers.teacher')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='teachers.subject')),
            ],
            options={
                'db_table': 'notes',
            },
        ),
        migrations.CreateModel(
            name='GradedAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('graded', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='graded_assignments', to='teachers.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachers.student')),
            ],
            options={
                'db_table': 'graded_assignments',
            },
        ),
        migrations.AddField(
            model_name='exam',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='teachers.subject'),
        ),
        migrations.AddField(
            model_name='exam',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='teachers.teacher'),
        ),
        migrations.CreateModel(
            name='DocumentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='result_documents/')),
                ('exam', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='document_result', to='teachers.exam')),
            ],
            options={
                'db_table': 'document_results',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=300)),
                ('document_file', models.FileField(upload_to='documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachers.teacher')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachers.subject')),
            ],
            options={
                'db_table': 'documents',
            },
        ),
        migrations.AddField(
            model_name='classroompage',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classroom_pages', to='teachers.subject'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='class_teacher',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='classroom', to='teachers.teacher'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjectAssignments', to='teachers.subject'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacherAssignments', to='teachers.teacher'),
        ),
    ]
